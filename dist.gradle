def javadocProjects = [
        ":flow-base-api",
        ":flow-service-api",
        ":payment-initiation-api",
        ":payment-service-api"
]

def combineProjects = [
        ":flow-base-api",
        ":payment-initiation-api"
]

task combinejavadoc(type: Javadoc) {
    source combineProjects.collect { project(it).sourceSets.main.allJava }
    classpath = files(combineProjects.collect { project(it).sourceSets.main.compileClasspath })
    destinationDir = file("${buildDir}/documentation/public/javadocs/payment-initiation-api")
}

task publishJavadocsAsLatest(type: Exec, dependsOn: [alljavadoc, combinejavadoc]) {
    javadocProjects.each { dependsOn("${it}:javadoc") }
    commandLine 'aws', '--region', 'eu-west-1', 's3', 'sync', 'documentation/public/javadocs', 's3://pos-flow-docs/javadocs/latest', '--acl', 'public-read'
}

task publishJavadocsByVersion(type: Exec, dependsOn: [alljavadoc, combinejavadoc]) {
    javadocProjects.each { dependsOn("${it}:javadoc") }
    commandLine 'aws', '--region', 'eu-west-1', 's3', 'sync', 'documentation/public/javadocs', "s3://pos-flow-docs/javadocs/${rootProject.version}", '--acl', 'public-read'
}