<resources>
    <string name="app_name">FlowServiceSample</string>
    <string name="enable_split">Enable split</string>
    <string name="pre_flow">Pre flow</string>
    <string name="split">Split</string>
    <string name="pre_payment">Pre transaction</string>
    <string name="post_payment">Post transaction</string>
    <string name="post_card">Post card reading</string>
    <string name="post_flow">Post flow</string>
    <string name="add_amounts">Add additional amounts to transaction</string>
    <string name="pay_portion">Pay portion of amounts</string>
    <string name="add_data_to_transaction">Add data to transaction</string>
    <string name="add_surcharge_fee">Add %1$s surcharge</string>
    <string name="add_for_charity" formatted="false">Add 3% for charity</string>
    <string name="send_response">Send response</string>
    <string name="add_customer_data">Add customer data</string>
    <string name="pay_portion_with_loyalty_points">Pay portion with loyalty points</string>
    <string name="pay_portion_with_gift_card">Pay %1$s with gift card</string>
    <string name="finish">Finish</string>
    <string name="add_payment_references">Add payment references</string>
    <string name="fss_loyalty_balance">Loyalty Balance</string>
    <string name="fss_pre_payment">Pre-transaction</string>
    <string name="fss_pre_flow">Pre-flow</string>
    <string name="fss_post_payment">Post-transaction</string>
    <string name="fss_post_card">Post-card-reading</string>
    <string name="fss_post_flow">Post-flow</string>
    <string name="fss_split">Split</string>
    <string name="split_amounts_in_half">Split amounts in half</string>
    <string name="split_basket_in_half">Split basket in half</string>
    <string name="cancel_payment">Cancel</string>
    <string name="setup_split">Setup split</string>
    <string name="choose_split_type">Please choose between split via basket and split via amounts.</string>
    <string name="only_amount_split_possible">As there are no basket items in the request, only split via amounts is possible.</string>
    <string name="add_remaining_basket_items">Add remaining basket items</string>
    <string name="add_remaining_amounts">Add remaining amounts</string>
    <string name="previously_paid_amount">Previously paid amount: %1$s</string>
    <string name="prev_paid_for_items">Previously paid for items (total value</string>
    <string name="process_split">Process</string>
    <string name="prev_txn_declined">Previous split transaction was declined! Please try again.</string>
    <string name="bypass_split">Bypass</string>

    <string name="pre_flow_help">Pre-flow is, if enabled, the first stage that gets called after payment initiation. It is called only once per payment. Applications in this stage receives the Payment request that was created by the initiation app, and can update any payment data.\n\nMost applications will find pre-transaction or post-card-reading more relevant, as they are called on a per customer basis and may receive customer specific data, such as card token.
    </string>
    <string name="split_help">The split stage allows for a special type of applications, split apps, to break down the purchase amount into multiple transactions - typically one per customer. This is a common scenario in the restaurant/cafe industry where customers in a group often want to split the total bill at the end.\n\nSplit applications also have the ability to cancel the overall payment at any time, which would lead to a partially fulfilled outcome if any transactions have been completed.
    </string>
    <string name="pre_txn_help">Pre-transaction apps are called once per customer transaction, before any payment applications are called. At this point an application can pay off all or a portion of the amounts with payment methods such as loyalty points, or add additional request amounts such as scheme fees or tax and change currency (if allowed).\n\nMost applications will find it more useful to be called in the post-card-reading stage, where they may also have access to payment card details.
    </string>
    <string name="post_card_reading_help">Post-card-reading is executed after the optional payment card reading step, during which a customer can present a payment card without yet being charged.\n\nThis stage is executed regardless of whether any card was presented, and as such any card data being passed here is optional. For any applications that require customer identification, such as loyalty apps, this stage is useful as any card tokens would be known at this point, unlike in the pre-transaction stage.\n\nWhether or not amounts or currency can be augmented at this stage is up to the payment application.
    </string>
    <string name="post_txn_help">Post-transaction, like pre-transaction, is executed once per customer transaction after it has been processed by a payment application.\n\nAt this stage the outcome of the transaction is known, and for approved outcomes, the amounts the customer was charged. This is useful for loyalty point collection, amongst other things.\n\nThe only thing applications can impact at this point is adding payment references, which may be reviewed by the initiation app later.
    </string>
    <string name="post_flow_help">Post-flow, like pre-flow, is called only once per payment (and not per individual customer transaction). Applications here will receive the final PaymentResponse which they can parse.\n\nAt this stage the applications can no longer impact the payment in any shape or form anymore. These applications are typically candidates to handle the request in the background, allowing the flow to complete.
    </string>
    <string name="loyalty_balance_help">This is purely an example of how a flow application can define custom request types and be executed when some application launches a request with that type.\n\nThis particular example show cases how a third party app (maybe a POS app) might want to allow a user to view their loyalty details by launching into the loyalty application with relevant customer details.
    </string>

    <string name="receipt_delivery">Receipt delivery</string>
    <string name="add_basket">Add basket</string>
    <string name="add_item_discount">Update basket with discounts</string>
    <string name="pre_flow_header_text">This sample only provides the minimum controls for pre-flow. For more details, see documentation.</string>
    <string name="set_amount">Set amount</string>
</resources>
