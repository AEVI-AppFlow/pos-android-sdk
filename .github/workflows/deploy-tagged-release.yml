name: Deploy libraries and samples

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  GITHUB_ACTOR: ${{ secrets.CI_BOT_USERNAME }}
  GITHUB_TOKEN: ${{ secrets.CI_BOT_PAT }}
  SDK_DEV_KEYSTORE: ${{ secrets.SDK_DEV_KEYSTORE }}
  SDK_DEV_KEYSTORE_PASSWORD: ${{ secrets.SDK_DEV_KEYSTORE_PASSWORD }}

on:
  push:
    tags:
      # <major.minor.patch>, example: 1.0.0
      - '[0-9]+.[0-9]+.[0-9]+'
      # <major.minor.patch-<tag>.<number>>, example: 1.0.0-RC.1, 1.0.0-alpha.2, 1.0.0-beta.14
      - '[0-9]+.[0-9]+.[0-9]+-*.[0-9]+'

jobs:
  deploy:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Cache Gradle Dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          distribution: zulu
          java-version: 11

      - name: Extract tag from ref
        # ref is refs/tag/<tag> - split by / and retrieve the 3rd element
        run: echo "TAG=$(echo $GITHUB_REF | cut -d / -f 3)" >> $GITHUB_ENV

      - name: Extract semver details from final release tag
        if: contains(env.TAG, '-') != true
        run: |
          echo "VERSION_MAJOR=$(echo $TAG | cut -d . -f 1)" >> $GITHUB_ENV
          echo "VERSION_MINOR=$(echo $TAG | cut -d . -f 2)" >> $GITHUB_ENV
          echo "VERSION_PATCH=$(echo $TAG | cut -d . -f 3)" >> $GITHUB_ENV
          echo "PRE_RELEASE=false" >> $GITHUB_ENV

      - name: Extract semver details from pre-release tag
        if: contains(env.TAG, '-')
        run: |
          echo "VERSION_MAJOR=$(echo $TAG | cut -d - -f 1 | cut -d . -f 1)" >> $GITHUB_ENV
          echo "VERSION_MINOR=$(echo $TAG | cut -d - -f 1 | cut -d . -f 2)" >> $GITHUB_ENV
          echo "VERSION_PATCH=$(echo $TAG | cut -d - -f 1 | cut -d . -f 3)" >> $GITHUB_ENV
          echo "VERSION_SUFFIX=-$(echo $TAG | cut -d - -f 2)" >> $GITHUB_ENV
          echo "PRE_RELEASE=true" >> $GITHUB_ENV

      - name: Calculate build counter/number for version code by number of tags for this version
        run: echo "VERSION_BUILD_NUMBER=$(git tag | grep $VERSION_MAJOR.$VERSION_MINOR.$VERSION_PATCH | wc -l)" >> $GITHUB_ENV

      - name: Log info
        run: echo "Version is $VERSION_MAJOR.$VERSION_MINOR.$VERSION_PATCH$VERSION_SUFFIX - build number $VERSION_BUILD_NUMBER"

      - name: Publish final release versions to Maven Central
        if: contains(env.TAG, '-') != true
        run: |
          ./gradlew jar publishToSonatype closeAndReleaseSonatypeStagingRepository \
          -Pversion_major=2 \
          -Pversion_minor=2 \
          -Pversion_patch=8 \
          -Pversion_suffix=${{env.VERSION_SUFFIX}} \
          -Pversion_build_counter=${{env.VERSION_BUILD_NUMBER}} \
        env:
          MVN_CENTRAL_USERNAME: ${{ secrets.MVN_CENTRAL_USERNAME }}
          MVN_CENTRAL_PASSWORD: ${{ secrets.MVN_CENTRAL_PASSWORD }}
          MVN_CENTRAL_PGP_KEY_ID: ${{ secrets.MVN_CENTRAL_PGP_KEY_ID }}
          MVN_CENTRAL_PGP_PRIVATE_KEY: ${{ secrets.MVN_CENTRAL_PGP_PRIVATE_KEY }}
          MVN_CENTRAL_PGP_PASSWORD: ${{ secrets.MVN_CENTRAL_PGP_PASSWORD }}
          MVN_CENTRAL_STAGING_PROFILE_ID: ${{ secrets.MVN_CENTRAL_STAGING_PROFILE_ID }}
